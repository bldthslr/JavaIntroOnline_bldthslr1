package u3_2_StringAndStringBuilder;

import java.util.Scanner;

/**
 * "10. Строка X состоит из нескольких предложений, каждое из которых кончается точкой, восклицательным или вопросительным
 * знаком. Определить количество предложений в строке X."
 *
 * Строка x считывается из потока ввода.
 * Поиск предложения идет до символов окончания предложения '.', '?', '!'.
 * Если данные символы идут подряд друг за другом, они учитываются как один символ конца предложения, пример:
 * "Какая чудесная погода!!! Не пойти ли нам на прогулку прямо сейчас?!" - в данной строке будет найдено 2 предложения.
 *
 * Однако, алгоритм будет работать с ошибками, если в тексте используются сокращения, многоточия и другие вхождения
 * данных символов, когда они не являются символами конца предложения.
 *
 * Для решения не используются регулярные выражения.
 */

public class Task_10 {
    public static void main(String[] args) {
        // Считаем строку x из потока ввода
        Scanner in = new Scanner(System.in);
        System.out.println("Input a string X:");
        String x = in.next();
        in.close();

        // Выведем результат на экран
        System.out.println("number of sentences in string X: " + countSentences(x));
    }

    /**
     * Возвращает количество предложений в стркое S. При этом предложением считается любая последовательность символов,
     * заканчивающаяся на один или несколько символов '?', '!', '.'
     * @param s - входная строка
     * @return - количество предложений в строке
     */
    public static int countSentences (String s) {
        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            if ((s.charAt(i) == '.') ||  (s.charAt(i) == '!') || (s.charAt(i) == '?')) {
                count++;
                    while ((i + 1 < s.length()) &&
                            ((s.charAt(i + 1) == '.') || (s.charAt(i + 1) == '!') || (s.charAt(i + 1) == '?'))) {
                        i++;
                }
            }
        }
        return count;
    }
}
