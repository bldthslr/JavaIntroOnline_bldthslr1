package u2_1_OneDimensionalArrays;

import java.util.Arrays;
import java.util.Scanner;

/**
 * "6. Задана последовательность N вещественных чисел. Вычислить сумму чисел, порядковые номера которых
 * являются простыми числами."
 *
 * N считывается из потока ввода
 * Массив заполняется случайными значениями из диапазона вещественных чисел [-100.0..100.0]
 * В данном решении не реализуются проверки на попадание в бесконечный цикл, а так же обработка исключений
 * В качестве порядковых номеров подразумеваются индексы элементов массива +1, т.е. a[0] - первый элемент и т.д.
 */

public class Task_6 {
    public static void main(String[] args) {
        // Считаем n из потока ввода
        Scanner in = new Scanner(System.in);
        System.out.print("Input n: ");
        int n = in.nextInt();
        in.close();
        // Заполним массив случайными значениями из диапазона [-100..100]
        double[] a = new double[n];
        for (int i = 0; i < n; i++) {
            a[i] = (Math.random() * 200) - 100;
        }
        /*
        Найдем все простые числа от 1 до n, и сложим элементы массива с простыми порядковыми номерами
        Нужно учитывать, что a[0] - первый порядковый номер, a[1] - второй и т.д.
        Простыми числами должны быть именно порядковые номера, а не индексы массива
        */
        // найдем количество делителей всех числе от 1 до n, если делителей нет (кроме 1 и себя), то число простое
        boolean have_div;
        double result = 0;  //второй по порядку элемент
        //начнем поиск простых чисел с 2, так как 1 - не простое число
        for (int i = 2; i < n+1; i++) {
            have_div = false; // для нового числа обнуляем количество делителей
            // внутренний цикл, ищем делители от двух до нужного числа - 1
            for (int j = 2; j < i; j++) {
                if (i % j == 0) {
                    have_div = true;
                    break;
                }
            }
            //если нашли хотя бы один делитель
            if (!have_div) {
                result += a[i-1];
                //System.out.println(a[i-1] + " " + i);
            }
        }
        // Выведем результат на экран
        //System.out.println(Arrays.toString(a));
        System.out.println(result);
    }
}
