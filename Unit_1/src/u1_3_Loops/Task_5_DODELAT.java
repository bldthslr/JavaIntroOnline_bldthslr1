package u1_3_Loops;

import java.util.Scanner;

/**
 * "5. Даны числовой ряд и некоторое число е. Найти сумму тех членов ряда, модуль которых больше или равен
 * заданному е. Общий член ряда имеет вид: a(n) = (1 / 2^n) + (1 / 3^n)"
 *
 * e - считывается из потока ввода
 * В цикле будем подсчитывать сумму членов ряда, пока модуль текущего члена ряда не будет больше заданного e
 * В данном решении не реализуются проверки на попадание в бесконечный циккл, а так же обработка исключений
 * Предпологается, что n - натуральное положительное число со значениями [1..+∞)
 * В версии win10 для ввода Double нужно использовать "," вместо "."; Пример "Input e: 0,5"
 */
public class Task_5_DODELAT {
    public static void main(String[] args) {
        //считываем e из потока ввода
        Scanner in = new Scanner(System.in);
        System.out.print("Input e: ");
        double e = in.nextDouble();
        in.close();
        // объявляем переменные
        int n = 0;                  // n - целое положительное
        double mod = 0;             //модуль члена ряда
        double sum = 0;             // сумма членов ряда
        // цикл
        while ((mod < e) && (n < 1000)) {
            n++;
            mod = Math.abs(1 / Math.pow(2, n)) + (1 / Math.pow(3, n));
            if (mod >= e) {
                sum += mod;
            }
            System.out.println("n = " + n + " mod = " + mod + " sum = " + sum);
        }
        System.out.println(sum);
    }
}
